# Generated from MedicalSmartGlassesLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,43,343,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,
        2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,
        5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,
        8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,4,19,
        208,8,19,11,19,12,19,209,1,19,3,19,213,8,19,1,20,1,20,1,20,1,20,
        1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,
        1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,
        1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
        1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,
        1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,40,4,40,330,8,40,11,40,12,40,331,
        1,41,4,41,335,8,41,11,41,12,41,336,1,42,4,42,340,8,42,11,42,12,42,
        341,0,0,43,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,1,0,3,1,
        0,48,57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,349,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
        1,0,0,0,0,85,1,0,0,0,1,87,1,0,0,0,3,99,1,0,0,0,5,104,1,0,0,0,7,110,
        1,0,0,0,9,119,1,0,0,0,11,124,1,0,0,0,13,127,1,0,0,0,15,131,1,0,0,
        0,17,139,1,0,0,0,19,145,1,0,0,0,21,149,1,0,0,0,23,156,1,0,0,0,25,
        162,1,0,0,0,27,172,1,0,0,0,29,179,1,0,0,0,31,184,1,0,0,0,33,187,
        1,0,0,0,35,196,1,0,0,0,37,199,1,0,0,0,39,207,1,0,0,0,41,214,1,0,
        0,0,43,218,1,0,0,0,45,223,1,0,0,0,47,230,1,0,0,0,49,232,1,0,0,0,
        51,236,1,0,0,0,53,241,1,0,0,0,55,255,1,0,0,0,57,266,1,0,0,0,59,270,
        1,0,0,0,61,273,1,0,0,0,63,280,1,0,0,0,65,283,1,0,0,0,67,286,1,0,
        0,0,69,293,1,0,0,0,71,301,1,0,0,0,73,305,1,0,0,0,75,313,1,0,0,0,
        77,318,1,0,0,0,79,321,1,0,0,0,81,329,1,0,0,0,83,334,1,0,0,0,85,339,
        1,0,0,0,87,88,5,111,0,0,88,89,5,107,0,0,89,90,5,32,0,0,90,91,5,103,
        0,0,91,92,5,108,0,0,92,93,5,97,0,0,93,94,5,115,0,0,94,95,5,115,0,
        0,95,96,5,101,0,0,96,97,5,115,0,0,97,98,5,32,0,0,98,2,1,0,0,0,99,
        100,5,115,0,0,100,101,5,116,0,0,101,102,5,111,0,0,102,103,5,112,
        0,0,103,4,1,0,0,0,104,105,5,102,0,0,105,106,5,114,0,0,106,107,5,
        97,0,0,107,108,5,109,0,0,108,109,5,101,0,0,109,6,1,0,0,0,110,111,
        5,99,0,0,111,112,5,111,0,0,112,113,5,110,0,0,113,114,5,116,0,0,114,
        115,5,105,0,0,115,116,5,110,0,0,116,117,5,117,0,0,117,118,5,101,
        0,0,118,8,1,0,0,0,119,120,5,116,0,0,120,121,5,117,0,0,121,122,5,
        114,0,0,122,123,5,110,0,0,123,10,1,0,0,0,124,125,5,111,0,0,125,126,
        5,110,0,0,126,12,1,0,0,0,127,128,5,111,0,0,128,129,5,102,0,0,129,
        130,5,102,0,0,130,14,1,0,0,0,131,132,5,100,0,0,132,133,5,105,0,0,
        133,134,5,115,0,0,134,135,5,112,0,0,135,136,5,108,0,0,136,137,5,
        97,0,0,137,138,5,121,0,0,138,16,1,0,0,0,139,140,5,115,0,0,140,141,
        5,116,0,0,141,142,5,97,0,0,142,143,5,114,0,0,143,144,5,116,0,0,144,
        18,1,0,0,0,145,146,5,101,0,0,146,147,5,110,0,0,147,148,5,100,0,0,
        148,20,1,0,0,0,149,150,5,97,0,0,150,151,5,99,0,0,151,152,5,99,0,
        0,152,153,5,101,0,0,153,154,5,112,0,0,154,155,5,116,0,0,155,22,1,
        0,0,0,156,157,5,108,0,0,157,158,5,101,0,0,158,159,5,97,0,0,159,160,
        5,118,0,0,160,161,5,101,0,0,161,24,1,0,0,0,162,163,5,101,0,0,163,
        164,5,109,0,0,164,165,5,101,0,0,165,166,5,114,0,0,166,167,5,103,
        0,0,167,168,5,101,0,0,168,169,5,110,0,0,169,170,5,99,0,0,170,171,
        5,121,0,0,171,26,1,0,0,0,172,173,5,115,0,0,173,174,5,119,0,0,174,
        175,5,105,0,0,175,176,5,116,0,0,176,177,5,99,0,0,177,178,5,104,0,
        0,178,28,1,0,0,0,179,180,5,115,0,0,180,181,5,104,0,0,181,182,5,111,
        0,0,182,183,5,119,0,0,183,30,1,0,0,0,184,185,5,116,0,0,185,186,5,
        111,0,0,186,32,1,0,0,0,187,188,5,109,0,0,188,189,5,101,0,0,189,190,
        5,115,0,0,190,191,5,115,0,0,191,192,5,97,0,0,192,193,5,103,0,0,193,
        194,5,101,0,0,194,195,5,115,0,0,195,34,1,0,0,0,196,197,5,111,0,0,
        197,198,5,102,0,0,198,36,1,0,0,0,199,200,5,108,0,0,200,201,5,97,
        0,0,201,202,5,115,0,0,202,203,5,116,0,0,203,38,1,0,0,0,204,208,3,
        41,20,0,205,208,3,43,21,0,206,208,3,45,22,0,207,204,1,0,0,0,207,
        205,1,0,0,0,207,206,1,0,0,0,208,209,1,0,0,0,209,207,1,0,0,0,209,
        210,1,0,0,0,210,212,1,0,0,0,211,213,3,47,23,0,212,211,1,0,0,0,212,
        213,1,0,0,0,213,40,1,0,0,0,214,215,5,100,0,0,215,216,5,97,0,0,216,
        217,5,121,0,0,217,42,1,0,0,0,218,219,5,104,0,0,219,220,5,111,0,0,
        220,221,5,117,0,0,221,222,5,114,0,0,222,44,1,0,0,0,223,224,5,109,
        0,0,224,225,5,105,0,0,225,226,5,110,0,0,226,227,5,117,0,0,227,228,
        5,116,0,0,228,229,5,101,0,0,229,46,1,0,0,0,230,231,5,115,0,0,231,
        48,1,0,0,0,232,233,5,115,0,0,233,234,5,101,0,0,234,235,5,116,0,0,
        235,50,1,0,0,0,236,237,5,110,0,0,237,238,5,111,0,0,238,239,5,116,
        0,0,239,240,5,101,0,0,240,52,1,0,0,0,241,242,5,100,0,0,242,243,5,
        111,0,0,243,244,5,99,0,0,244,245,5,117,0,0,245,246,5,109,0,0,246,
        247,5,101,0,0,247,248,5,110,0,0,248,249,5,116,0,0,249,250,5,97,0,
        0,250,251,5,116,0,0,251,252,5,105,0,0,252,253,5,111,0,0,253,254,
        5,110,0,0,254,54,1,0,0,0,255,256,5,109,0,0,256,257,5,101,0,0,257,
        258,5,100,0,0,258,259,5,105,0,0,259,260,5,99,0,0,260,261,5,97,0,
        0,261,262,5,116,0,0,262,263,5,105,0,0,263,264,5,111,0,0,264,265,
        5,110,0,0,265,56,1,0,0,0,266,267,5,97,0,0,267,268,5,110,0,0,268,
        269,5,100,0,0,269,58,1,0,0,0,270,271,5,97,0,0,271,272,5,116,0,0,
        272,60,1,0,0,0,273,274,5,111,0,0,274,275,5,99,0,0,275,276,5,108,
        0,0,276,277,5,111,0,0,277,278,5,99,0,0,278,279,5,107,0,0,279,62,
        1,0,0,0,280,281,5,112,0,0,281,282,5,109,0,0,282,64,1,0,0,0,283,284,
        5,97,0,0,284,285,5,109,0,0,285,66,1,0,0,0,286,287,5,99,0,0,287,288,
        5,104,0,0,288,289,5,97,0,0,289,290,5,110,0,0,290,291,5,103,0,0,291,
        292,5,101,0,0,292,68,1,0,0,0,293,294,5,112,0,0,294,295,5,97,0,0,
        295,296,5,116,0,0,296,297,5,105,0,0,297,298,5,101,0,0,298,299,5,
        110,0,0,299,300,5,116,0,0,300,70,1,0,0,0,301,302,5,110,0,0,302,303,
        5,101,0,0,303,304,5,119,0,0,304,72,1,0,0,0,305,306,5,109,0,0,306,
        307,5,101,0,0,307,308,5,115,0,0,308,309,5,115,0,0,309,310,5,97,0,
        0,310,311,5,103,0,0,311,312,5,101,0,0,312,74,1,0,0,0,313,314,5,115,
        0,0,314,315,5,101,0,0,315,316,5,110,0,0,316,317,5,100,0,0,317,76,
        1,0,0,0,318,319,5,105,0,0,319,320,5,116,0,0,320,78,1,0,0,0,321,322,
        5,112,0,0,322,323,5,108,0,0,323,324,5,101,0,0,324,325,5,97,0,0,325,
        326,5,115,0,0,326,327,5,101,0,0,327,80,1,0,0,0,328,330,7,0,0,0,329,
        328,1,0,0,0,330,331,1,0,0,0,331,329,1,0,0,0,331,332,1,0,0,0,332,
        82,1,0,0,0,333,335,7,1,0,0,334,333,1,0,0,0,335,336,1,0,0,0,336,334,
        1,0,0,0,336,337,1,0,0,0,337,84,1,0,0,0,338,340,7,2,0,0,339,338,1,
        0,0,0,340,341,1,0,0,0,341,339,1,0,0,0,341,342,1,0,0,0,342,86,1,0,
        0,0,7,0,207,209,212,331,336,341,0
    ]

class MedicalSmartGlassesLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    TRIGGER = 1
    STOP = 2
    FRAME = 3
    CONTINUE = 4
    TURN = 5
    ON = 6
    OFF = 7
    DISPLAY = 8
    START = 9
    END = 10
    ACCEPT = 11
    LEAVE = 12
    EMERGENCY = 13
    SWITCH = 14
    SHOW = 15
    TO = 16
    MESSAGES = 17
    OF = 18
    LAST = 19
    TIME_UNIT = 20
    DAY = 21
    HOUR = 22
    MINUTE = 23
    S = 24
    SET = 25
    NOTE = 26
    DOCUMENTATION = 27
    MEDICATION = 28
    AND = 29
    AT = 30
    OCLOCK = 31
    PM = 32
    AM = 33
    CHANGE = 34
    PATIENT = 35
    NEW = 36
    MESSAGE = 37
    SEND = 38
    IT = 39
    PLEASE = 40
    INT = 41
    WORD = 42
    WS = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ok glasses '", "'stop'", "'frame'", "'continue'", "'turn'", 
            "'on'", "'off'", "'display'", "'start'", "'end'", "'accept'", 
            "'leave'", "'emergency'", "'switch'", "'show'", "'to'", "'messages'", 
            "'of'", "'last'", "'day'", "'hour'", "'minute'", "'s'", "'set'", 
            "'note'", "'documentation'", "'medication'", "'and'", "'at'", 
            "'oclock'", "'pm'", "'am'", "'change'", "'patient'", "'new'", 
            "'message'", "'send'", "'it'", "'please'" ]

    symbolicNames = [ "<INVALID>",
            "TRIGGER", "STOP", "FRAME", "CONTINUE", "TURN", "ON", "OFF", 
            "DISPLAY", "START", "END", "ACCEPT", "LEAVE", "EMERGENCY", "SWITCH", 
            "SHOW", "TO", "MESSAGES", "OF", "LAST", "TIME_UNIT", "DAY", 
            "HOUR", "MINUTE", "S", "SET", "NOTE", "DOCUMENTATION", "MEDICATION", 
            "AND", "AT", "OCLOCK", "PM", "AM", "CHANGE", "PATIENT", "NEW", 
            "MESSAGE", "SEND", "IT", "PLEASE", "INT", "WORD", "WS" ]

    ruleNames = [ "TRIGGER", "STOP", "FRAME", "CONTINUE", "TURN", "ON", 
                  "OFF", "DISPLAY", "START", "END", "ACCEPT", "LEAVE", "EMERGENCY", 
                  "SWITCH", "SHOW", "TO", "MESSAGES", "OF", "LAST", "TIME_UNIT", 
                  "DAY", "HOUR", "MINUTE", "S", "SET", "NOTE", "DOCUMENTATION", 
                  "MEDICATION", "AND", "AT", "OCLOCK", "PM", "AM", "CHANGE", 
                  "PATIENT", "NEW", "MESSAGE", "SEND", "IT", "PLEASE", "INT", 
                  "WORD", "WS" ]

    grammarFileName = "MedicalSmartGlassesLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


